title: "Nocturnal: Create your own online portfolio page!"
date: August 31, 2023

content:
  - Creating a portfolio website serves as a powerful means to elevate your online presence, and IMO is the simplest yet most effective first step to securing opportunities and impressing stakeholders! This blog is a Step-By-Step guide tailored to help you craft your very own portfolio page using the Nocturnal template (used to create this site) in as little as 15 minutes!
  - No prerequisites required! This blog is specifically tailored for novice developers aspiring to take their first steps in the domain of Computing :p
  - imagegroup:
      caption: I named my template "Nocturnal" in spirit of the quiet nights I spent nurturing my passion in this domain.
      grid_cols: 2
      images: 
        - image: nocturnal_dark.png
          grid_cols_sm: 2
          grid_cols_md: 1
        - image: nocturnal_light.png
          grid_cols_sm: 2
          grid_cols_md: 1
  - h3: Table of Contents
  - For those interested in leveraging AWS resources to provision the site, please focus solely on Step 2, and for deployment instructions, please consult the Deployment section in the <a to="/blog/polymer">Polymer documentation</a>.
  - table_of_contents:
    - header: "Step 1: Create new Gatsby project"
      text: "Step 1: Create new Gatsby project"
    - header: "Step 2: Personalise Portfolio Content"
      text: "Step 2: Personalise Portfolio Content"
    - header: "Step 3: Using Gatsby to Build Static Pages"
      text: "Step 3: Using Gatsby to Build Static Pages"
    - header: "Step 4: Deploy to Github Pages"
      text: "Step 4: Deploy to Github Pages"
  - list_bullet:
    - "Step 1: Create new Gatsby project"
    - "Step 2: Personalise Portfolio Content"
    - "Step 3: Using Gatsby to Build Static Pages"
    - "Step 4: Deploy to Github Pages"
  - h3: "Step 1: Create new Gatsby project"
  - In creating Nocturnal, I used the Gatsby Framework to generate production-ready static websites, ReactJS to craft dynamic and interactive components, and TailwindCSS for styling the interface.
  - Analogically, React specifies the blueprint of a house while Tailwind helps in decorating the furniture and rooms. Finally, GatsbyJS acts as a 3D printer translating the design into a tangible, fully-formed house.
  - While the "heavy lifting" on React or Tailwind is already taken care of, we still need to download GatsbyJS to generate the final production build and preview the development site.
  - h4: Install Prerequisites
  - "Before you begin, ensure you have met the following requirements:"
  - list_numerical:
    - 
      - "<b>Node.js and npm</b>: To develop and build the project using Gatsby, you need to have Node.js and npm (Node Package Manager) installed."
      - list_bullet:
        - '<b>Node.js</b>: Download from the <a href="https://nodejs.org/">official Node.js website</a>. Node.js version must be 18 or higher.'
        - '<b>NPM (Node Package Manager)</b>: NPM is usually included with Node.js installation. If NPM is not installed, you can download it from the <a href="https://www.npmjs.com/">official npm website</a>.'
    - 
      - "<b>Gatsby CLI</b>: This project uses Gatsby, so you'll need the Gatsby CLI (Command Line Interface) to manage and build your site. You can install it globally by running:"
      - code: 
          code: npm install -g gatsby-cli
          lang: bash
  - section:
    - h4: Create New Project
    - This command clones the codebase from Nocturnal's remote repository into your local machine and installs all required dependencies.
    - code:
        code: gatsby new MyPortfolio https://github.com/algebananazzzzz/Nocturnal.git
        lang: bash
  - section:
    - h4: Preview Development Site
    - This generates a live preview of the site at <a href="http://localhost:8000/">localhost:8000</a>. This allows you to preview site changes as you edit the site content in the next segment.
    - code:
        code: "cd MyPortfolio\ngatsby develop"
        lang: bash
  - h3: "Step 2: Personalise Portfolio Content"
  - Open the folder (Ctrl-O) containing the code using your preferred code editor e.g. Visual Studio Code. Code editors are essentially text editors (like Microsoft Word), but tailored specifically for viewing and writing code. Here are the instructions to download Visual Studio Code.
  - image:
      image: nocturnal_dir.png
      caption: You'll see this project directory.
  - Do not be intimidated by the numerous files within the project directory! We will only touch the YAML configuration files within the src/content folder, which Nocturnal will source from for site content. Please follow the instructions outlined in this blog, and seek further clarififications in the comments provided in the YAML files.
  - section:
    - h4: 1. Introduction to SVGs (Scalable Vector Graphics)
    - SVGs, unlike pixel-based formats like JPEG or PNG, use mathematical equations to depict shapes and colors. <a href="https://www.svgrepo.com/">SVGRepo</a> is a library of 500k+ Open-licensed SVG Vectors, which we can utilise to style our website with vibrant vectors!
    - "Let's go to <a href=\"https://www.svgrepo.com/\">SVGRepo</a>, find an SVG of your choice, select \"edit vector\" and then paste the SVG code into a blank HTML file. You'll come across a generic format that looks like this:"
    - code:
        code: "<svg viewbox=\"0 0 x x\" fill=\"#color\" stroke=\"#color\" ...other_fields>\n  <d some_value>\n    <path d=\"super long value\" fill=\"#color\" stroke=\"#color\"></path>\n    <path d=\"super long value\" fill=\"#color\" stroke=\"#color\"></path>\n    ...other path elements\n  </d>\n</svg>"
        lang: html
    - list_numerical: 
      - The "svg" parent element that configures the viewbox, fill (optional) and stroke (optional) colors.
      - The "d" wrapping element, which we will ignore.
      - The "path" elements, which configures the mathematical equations used to describe the SVG.
    - Under `src/content`, open the `svgs.yml` file that defines skill icons (used in project, skills page). Feel free to add icons that represent your frequently used skills!